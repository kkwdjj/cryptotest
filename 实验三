一、欧拉计划 解题脚本  31.py
RSA加密

RSA加密基于以下流程：

生成两个不同的素数p和q。计算n=pq以及φ=(p-1)(q-1)。
找到整数e，满足1<e<φ，且gcd(e,φ)=1。

RSA系统能加密的信息是区间[0,n-1]中的整数。
因此，需要加密的文本首先需要转换成可加密的信息（即区间[0,n-1]内的某个整数）。
加密文本时，如果文本转换成的信息是m，则加密为c=me mod n。

解密文本时，需要以下流程：计算d满足ed=1 mod φ，如果加密的信息是c，则解密为m=cd mod n。

存在某些e和m使得me mod n=m。
我们称满足me mod n=m的这些m为未加密信息。

在选择e时，很重要的一点就是不应该有太多未加密信息。
例如，令p=19，q=37。
然后n=19*37=703，φ=18*36=648。
如果我们选择e=181，那么尽管gcd(181,648)=1，但是所有可能的信息
m (0≤m≤n-1)都是未加密信息，只要我们计算一下me mod n就能发现。
对于任意的e，总是存在一些未加密信息。
使得未加密信息的数目为最小值是很重要的。

现在我们选择p=1009，q=3643。
找出所有e，满足1<e<φ(1009,3643)且gcd(e,φ)=1，并且此时未加密信息的数目为最小值。求出所有这些e的和。
二、Implement RSA 解题脚本为32.py
网址https://www.cryptopals.com/sets/5/challenges/39
